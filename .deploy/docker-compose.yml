# version: "3.9"
# networks:
#   web:
#     external: true
#
# services:
#   reverse-proxy:
#     image: traefik:v3.0
#     command:
#       - "--providers.docker=true"
#       - "--providers.docker.exposedbydefault=false"
#       - "--entrypoints.web.address=:80"
#       - "--entrypoints.websecure.address=:443"
#       - "--certificatesresolvers.le.acme.tlschallenge=true"
#       - "--certificatesresolvers.le.acme.email=muneebusmani8355@gmail.com"
#       - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
#       - "--api.dashboard=true"
#     ports:
#       - "80:80"
#       - "443:443"
#     volumes:
#       - "/var/run/docker.sock:/var/run/docker.sock:ro"
#       - "letsencrypt:/letsencrypt"
#     networks:
#       - web
#     restart: unless-stopped
#
#   webapp:
#     image: enginesmarket:latest
#     # env_file:
#     #   - .env.production
#     labels:
#       - "traefik.enable=true"
#       - "traefik.http.routers.webapp.rule=Host(`khaki-kangaroo-21779.zap.cloud`)"
#       - "traefik.http.routers.webapp.entrypoints=websecure"
#       - "traefik.http.routers.webapp.tls.certresolver=le"
#       - "traefik.http.middlewares.webapp-redirect.redirectscheme.scheme=https"
#       - "traefik.http.routers.webapp-redirect.rule=Host(`khaki-kangaroo-21779.zap.cloud`)"
#       - "traefik.http.routers.webapp-redirect.entrypoints=web"
#       - "traefik.http.routers.webapp-redirect.middlewares=webapp-redirect"
#       # tell Traefik the container exposes port 3000
#       - "traefik.http.services.webapp.loadbalancer.server.port=3000"
#     depends_on:
#       - reverse-proxy
#     networks:
#       - web
#     restart: unless-stopped
#
# volumes:
#   letsencrypt:
version: "3.9"

networks:
  web:
    external: true

services:
  # ============ TRAEFIK ============
  reverse-proxy:
    image: traefik:v3.0
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      - "--certificatesresolvers.le.acme.email=muneebusmani8355@gmail.com"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      - "--api.dashboard=true"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "letsencrypt:/letsencrypt"
    networks:
      - web
    restart: unless-stopped

  # ============ NEXT.JS APP ============
  webapp:
    image: enginesmarket:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webapp.rule=Host(`khaki-kangaroo-21779.zap.cloud`)"
      - "traefik.http.routers.webapp.entrypoints=websecure"
      - "traefik.http.routers.webapp.tls.certresolver=le"
      - "traefik.http.middlewares.webapp-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.webapp-redirect.rule=Host(`khaki-kangaroo-21779.zap.cloud`)"
      - "traefik.http.routers.webapp-redirect.entrypoints=web"
      - "traefik.http.routers.webapp-redirect.middlewares=webapp-redirect"
      - "traefik.http.services.webapp.loadbalancer.server.port=3000"
    depends_on:
      - reverse-proxy
    networks:
      - web
    restart: unless-stopped

  # ============ WORDPRESS: DB ============
  wordpress-db:
    image: mysql:8.0
    container_name: wordpress-db
    restart: always
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - web

  # ============ WORDPRESS: PHP-FPM ============
  wordpress:
    image: wordpress:php8.2-fpm
    container_name: wordpress
    restart: always
    environment:
      WORDPRESS_DB_HOST: wordpress-db
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_MEMORY_LIMIT', '512M');
        define('WP_MAX_MEMORY_LIMIT', '1024M');
        define('DISALLOW_FILE_MODS', true); # Good for headless + security
    volumes:
      - ./wordpress:/var/www/html
      - ./php.ini:/usr/local/etc/php/conf.d/custom.ini
    networks:
      - web

  # ============ WORDPRESS: NGINX (Reverse Proxy for PHP) ============
  wordpress-nginx:
    image: nginx:alpine
    container_name: wordpress-nginx
    restart: always
    volumes:
      - ./wordpress:/var/www/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - web
    labels:
      # Enable Traefik
      - "traefik.enable=true"
      # Route: cms.yourdomain.com (change to your actual domain or test subdomain)
      - "traefik.http.routers.wordpress-secure.rule=Host(`cms.khaki-kangaroo-21779.zap.cloud`)"
      - "traefik.http.routers.wordpress-secure.entrypoints=websecure"
      - "traefik.http.routers.wordpress-secure.tls.certresolver=le"
      # HTTP to HTTPS redirect
      - "traefik.http.routers.wordpress.rule=Host(`cms.khaki-kangaroo-21779.zap.cloud`)"
      - "traefik.http.routers.wordpress.entrypoints=web"
      - "traefik.http.routers.wordpress.middlewares=wordpress-redirect"
      - "traefik.http.middlewares.wordpress-redirect.redirectscheme.scheme=https"
      # Service config
      - "traefik.http.services.wordpress.loadbalancer.server.port=80"
    depends_on:
      - wordpress
      - wordpress-db

volumes:
  db_data:
  letsencrypt:
