name: Build & Deploy to VPS
on:
  push:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build \
          --build-arg API_KEY=${{ secrets.API_KEY }} \
          --build-arg BASE_URL=${{ secrets.BASE_URL }} \
          --build-arg SMTP_HOST=${{ secrets.SMTP_HOST }} \
          --build-arg SMTP_PORT=${{ secrets.SMTP_PORT }} \
          --build-arg SMTP_SECURE=${{ secrets.SMTP_SECURE }} \
          --build-arg SMTP_USER=${{ secrets.SMTP_USER }} \
          --build-arg SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }} \
          --build-arg SMTP_FROM_EMAIL=${{ secrets.SMTP_FROM_EMAIL }} \
          --build-arg SMTP_TO_EMAIL=${{ secrets.SMTP_TO_EMAIL }} \
          -t enginesmarket:latest .

      - name: Save image as tarball
        run: docker save enginesmarket:latest -o enginesmarket.tar

      - name: Copy image to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "enginesmarket.tar"
          target: "/tmp/enginesmarket.tar"

      - name: Deploy on VPS
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            mkdir -p /var/www/enginesmarket

            cd /var/www/enginesmarket

            # cat > .env.production <<EOL
            # API_KEY=${{ secrets.API_KEY }}
            # BASE_URL=${{ secrets.BASE_URL }}
            # SMTP_HOST=${{ secrets.SMTP_HOST }}
            # SMTP_PORT=${{ secrets.SMTP_PORT }}
            # SMTP_SECURE=${{ secrets.SMTP_SECURE }}
            # SMTP_USER=${{ secrets.SMTP_USER }}
            # SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}
            # SMTP_FROM_EMAIL=${{ secrets.SMTP_FROM_EMAIL }}
            # SMTP_TO_EMAIL=${{ secrets.SMTP_TO_EMAIL }}
            # EOL

            docker load -i /tmp/enginesmarket.tar

            docker compose up -d --force-recreate

            rm /tmp/enginesmarket.tar
