# name: Vercel Production Deployment
# env:
#   VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
#   VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
# on:
#   workflow_run:
#     workflows: ["Build & Deploy to VPS"]
#     types:
#       - completed
# jobs:
#   Deploy-Production:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - name: Install Vercel CLI
#         run: npm install --global vercel@canary
#       - name: Pull Vercel Environment Information
#         run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
#       - name: Build Project Artifacts
#         run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
#       - name: Deploy Project Artifacts to Vercel
#         run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
name: Vercel Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches:
      - master

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "22"

      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Vercel CLI
        run: npm install --global vercel@canary

      - name: Pull Vercel Production Environment
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
